- url = episode_record.new_record? ? episode_records_path(episode_record.episode) : episode_record_path(episode_record.episode, episode_record.record)
= form_for episode_record, url: url do |f|
  = render "application/components/error_panel", resource: episode_record

  = f.hidden_field :episode_id
  = hidden_field_tag :page_category, page_category

  .mb-2
    c-record-rating :init-record=="{ ratingState: '#{episode_record.rating_state}' }"
  .mb-2
    - body = episode_record.body&.gsub(/(?:\n\r?|\r\n?)/, "\\n").presence || ""
    c-record-textarea :init-record="{ uid: 1, body: '#{body}', bodyRows: 2 }" placeholder="#{t('messages.episode_records.new.write_your_comment')}"
  .row
    .col
      - if current_user.authorized_to?(:twitter, shareable: true)
        label
          = icon "twitter", "fab", class: "u-text-twitter mr-1"
          = f.check_box :share_to_twitter, checked: current_user.share_record_to_twitter?
    .col.col-auto
      .text-center
        = f.button class: "btn btn-primary" do
          = icon "edit"
          - if episode_record.new_record?
            = t "verb.track"
          - else
            = t "verb.update"
    .col
      .text-right
        .small.text-mute
          c-record-word-count :init-record="{ uid: 1, wordCount: 0 }"

- content_for :js_templates do
  = render "application/js_templates/record_rating"
  = render "application/js_templates/record_textarea"
  = render "application/js_templates/record_word_count"
